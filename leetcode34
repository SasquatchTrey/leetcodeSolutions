import java.util.Arrays;

public class leetcode34 {
    
    public static void main(String[] args){
        int[] nums = {5,7,7,8,8,10};
        System.out.println(Arrays.toString(searchRange(nums,7)));
    }
    
    public static int[] searchRange(int[] nums, int target) {
        int res1 = binarySearch(nums, target); // getting the first indice in O(log n) time complexity
        int res2 = reverseBinarySearch(nums, target); // second result
        int[] arr = {res1,res2}; // first and last index of target
        return arr;
    }

    public static int binarySearch(int[] arr, int target){
        int res = -1;
        int high = arr.length-1;
        int low = 0;
        while(low <= high){
            int mid = (high + low)/2;
            if(arr[mid] > target){
                high = mid -1;
            }else if(arr[mid] < target){
                low = mid + 1;
            }else{
                res = mid;
                high = mid-1;
            }
        }
        return res;
    }
    public static int reverseBinarySearch(int[] arr, int target){
        int res = -1;
        int high = arr.length-1;
        int low = 0;
        while(low <= high){
            int mid = (high + low)/2;
            if(arr[mid] > target){
                high = mid -1;
            }else if(arr[mid] < target){
                low = mid + 1;
            }else{
                res = mid;
                low = mid+1;
            }
        }
        return res;
    }
}
